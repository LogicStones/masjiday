@model Admin.Models.ResetPasswordViewModel

@{
    ViewBag.Title = "Masjiday - Reset Password";
    Layout = "~/Views/Shared/_UnAuthorized.cshtml";
}
<div class="auth">
    <div class="auth-header" style="padding-bottom: 4rem">
        <img src="~/img/logo/logo.png" style="height:150px; margin-bottom:25px;" />
        <h6>Password Reset</h6>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4 offset-md-4">
                @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                    @Html.HiddenFor(model => model.Code)

                    <div class="form-group">
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "txtEmail", placeholder = "Email", type = "Email" })
                            <div class="input-group-addon"><i class="ti-email"></i></div>
                        </div>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", id = "txtPassword", placeholder = "Password", type = "password" })
                            <div class="input-group-addon"><i class="ti-key"></i></div>
                        </div>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", id = "txtConfirmPassword", placeholder = "Confirm Password", type = "password" })
                            <div class="input-group-addon"><i class="ti-key"></i></div>
                        </div>
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group clearfix">
                        <button type="submit" id="btnResetPassword" class="btn btn-danger btn-block">Reset Password</button>
                    </div>
                    @*<div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            </div>
                        </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" class="btn btn-default" value="Reset" />
                                    </div>
                                </div>*@
                }

            </div>
        </div>
    </div>
</div>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
